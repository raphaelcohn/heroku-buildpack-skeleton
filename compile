#!/usr/bin/env sh
# This file is part of heroku-skeleton-buildpack. It is subject to the licence terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/heroku-skeleton-buildpack/master/COPYRIGHT. No part of heroku-skeleton, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2015 The developers of heroku-skeleton-buildpack. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/heroku-skeleton-buildpack/master/COPYRIGHT.


_program()
{
	core_usesIn heroku
	core_usesIn heroku validate buildpack configure
    heroku_compile()
    {
		heroku_buildpack_createCacheDirIfNotPresent
		heroku_buildpack_sourceKnownCompileEnvironmentVariables
		heroku_buildpack_deployHerokuBuildpackArtifacts
		
		# TODO: At this point, we move all resources for other buildpacks into the ROOT
		# eg for multi, etc
		# this can also include our Procfile
    }
}

_program_name='compile'
_program_namespace='heroku_compile'
_program_version='unversioned'
_program_package_or_build=''
_program_path="$([ "${_program_fattening_program_path+set}" = 'set' ] && printf '%s\n' "$_program_fattening_program_path" || ([ "${0%/*}" = "${0}" ] && printf '%s\n' '.' || printf '%s\n' "${0%/*}"))"
_program_libPath="${_program_path}/lib"
_program_etcPath="${_program_path}/etc"
_program_varPath="${_program_path}/var"
_program_entrypoint='heroku_compile'

_program_commandLine_helpMessage()
{
	_program_commandLine_helpMessage_usage="BUILD_DIR CACHE_DIR ENV_DIR
"
	_program_commandLine_helpMessage_description="Detects if this Heroku buildpack is appropriate for a Heroku app"
	_program_commandLine_helpMessage_options=""
    _program_commandLine_helpMessage_optionsSpacing='   '
	_program_commandLine_helpMessage_configurationKeys=""
	_program_commandLine_helpMessage_examples="
  ${_program_name} BUILD_DIR CACHE_DIR ENV_DIR
"
}

_program_commandLine_parse()
{
	if [ $# -ne 3 ]; then
		local plural
		if [ $# -eq 1 ]; then
			plural=''
		else
			plural='s'
		fi
		core_commandLine_exitBadCommandLine "Please specify only three argumenta, BUILD_DIR, CACHE_DIR and ENV_DIR, not $# argument${plural}"
	fi
	
	heroku_validate_parseBuildDir "$1"
	
	core_validate_folderPathIsReadableAndSearchableAndWritableOrCanBeCreated $core_commandLine_exitCode_USAGE 'option' 'CACHE_DIR' "$2"
	pushd "$2"
		heroku_buildpack_cacheDir="$(pwd)"
	popd
	
	core_validate_folderPathReadableAndSearchable $core_commandLine_exitCode_USAGE 'option' 'ENV_DIR' "$3"
	pushd "$3"
		heroku_buildpack_envDir="$(pwd)"
	popd
}

. "$_program_libPath"/shellfire/core/init.functions "$@"
