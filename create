#!/usr/bin/env sh
# This file is part of heroku-skeleton-buildpack. It is subject to the licence terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/heroku-skeleton-buildpack/master/COPYRIGHT. No part of heroku-skeleton, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2015 The developers of heroku-skeleton-buildpack. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/heroku-skeleton-buildpack/master/COPYRIGHT.


_program()
{
	core_usesIn heroku
	core_usesIn heroku validate
    heroku_create()
    {
		# TODO: Set  heroku_repositoryPath
		
		heroku_setConstants
		heroku_hasLocalChanges
		heroku_create_app
		heroku_deploy
    }
}

_program_name='create'
_program_namespace='heroku_create'
_program_version='unversioned'
_program_package_or_build=''
_program_path="$([ "${_program_fattening_program_path+set}" = 'set' ] && printf '%s\n' "$_program_fattening_program_path" || ([ "${0%/*}" = "${0}" ] && printf '%s\n' '.' || printf '%s\n' "${0%/*}"))"
_program_libPath="${_program_path}/lib"
_program_etcPath="${_program_path}/etc"
_program_varPath="${_program_path}/var"
_program_entrypoint='createherokuapp'

_program_commandLine_parseInitialise()
{
	heroku_app_default='heroku'
	heroku_region_default='eu'
}

# Move to a model where we source a file...
_program_commandLine_helpMessage()
{
	_program_commandLine_helpMessage_usage="[OPTION]...
"
	_program_commandLine_helpMessage_description="Creates Heroku apps"
	_program_commandLine_helpMessage_options="
  -a, --app APP        Name of application APP to create.
                       Defaults to '$heroku_app_default'.
  -r, --region REGION  REGION (eu or us) to use.
                       Defaults to '$heroku_region_default'."
    _program_commandLine_helpMessage_optionsSpacing='   '
	_program_commandLine_helpMessage_configurationKeys="
  heroku_app     Equivalent to --app
  heroku_region  Equivalent to --region
"
	_program_commandLine_helpMessage_examples="
  ${_program_name} my-report
"
}

_program_commandLine_optionExists()
{
	case "$optionName" in
		
		a|app)
			echo 'yes-argumented'
		;;
		
		r|region)
			echo 'yes-argumented'
		;;
		
		*)
			echo 'no'
		;;
		
	esac
}

_program_commandLine_processOptionWithoutArgument()
{
	:
}

_program_commandLine_processOptionWithArgument()
{
	case "$optionName" in
		
		a|app)
			heroku_app="$optionValue"
		;;
		
		r|region)
			heroku_validate_region $core_commandLine_exitCode_USAGE 'option' "$optionNameIncludingHyphens" "$optionValue"
			heroku_region="$optionValue"
		;;
		
	esac
}

_program_commandLine_handleNonOptions()
{
	if [ $# -ne 0 ]; then
		core_exitError $core_commandLine_exitCode_USAGE "There are no non-options"
	fi
}

_program_commandLine_validate()
{
	if core_variable_isUnset heroku_app; then
		heroku_app="$heroku_app_default"
	fi
	
	if core_variable_isUnset heroku_region; then
		heroku_region="$heroku_region_default"
	else
		heroku_validate_region $core_commandLine_exitCode_CONFIG 'configuration setting' 'heroku_region' "$heroku_region"
	fi
}

. "$_program_libPath"/shellfire/core/init.functions "$@"
